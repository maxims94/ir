#!/usr/bin/python3

import argparse
import os

from database import Database
from item import Item
from model import Model
from present import Present
from rss import RSS

parser = argparse.ArgumentParser()
parser.add_argument("mode", type=str, choices=["load", "learn", "classify", "show"])
args = parser.parse_args()
m = args.mode

db = Database.read()

#
# Update
#

if m == "load":

    print("Load database.")

    for url in open('src', 'r'):

        print("Process: {}".format(url))
        items = RSS.get_items_by_url(url)

        for i in items:
            print("Item: {}".format(i))
            db.add(i)

    print("Write to 'database'.")

    Database.write(db)

#
# Classify
#

if m == "classify":

    print("Classify items.")

    for item in db.get_items():

        if item.is_classified():
            continue

        print(">>> {}".format(item.title))
        print(item.summary[:300])

        choice = input("Is this useful ([Y]es/[N]o/[A]bort)?: ").lower()

        if choice == "y":
            item.set_class(1)
            Database.write(db)

        elif choice == "n":
            item.set_class(0)
            Database.write(db)

        elif choice == "a":
            print("Cancel.")
            break
        else:
            print("Skip item")

#
# Learn
#

if m == "learn":

    print("Generate model.")

    model = Model(db)
    model.generate()

    print(repr(model))

    print("Write to 'model'.")
    Model.write(model)

#
# Show
#

if m == "show":

    present = Present(db)

    if os.path.isfile('model'):
        print("Show with model")
        mo = Model.read(db)
        present.show(model=mo)

    else:
        print("Show without model")
        present.show()

